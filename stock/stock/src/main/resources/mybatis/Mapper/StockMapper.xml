<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sixaps.stock.Mapper.StockMapper" >

    <resultMap id="test_map" type="sixaps.stock.Model.Stock">
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="trading_day" column="trading_day" jdbcType="DATE" javaType="java.lang.String"/>
        <result property="open_value" column="open_value" jdbcType="NUMERIC"/>
        <result property="close_value" column="close_value" jdbcType="NUMERIC"/>
        <result property="high_value" column="high_value" jdbcType="NUMERIC"/>
        <result property="low_value" column="low_value" jdbcType="NUMERIC"/>
        <result property="volume_value" column="volume_value" jdbcType="NUMERIC"/>
    </resultMap>

    <parameterMap id="par_map" type="sixaps.stock.Model.StockGroup">
        <parameter property="code" jdbcType="VARCHAR" mode="IN"/>
        <parameter property="stocks" jdbcType="CURSOR" mode="OUT" resultMap="test_map"/>
    </parameterMap>

    <select id="get_Data_Days" parameterMap="par_map" statementType="CALLABLE">
        {Call get_All_Data_Days(?,?)}
    </select>

    <select id="get_Data_Weeks" parameterMap="par_map" statementType="CALLABLE">
        {Call get_All_Data_Weeks(?,?)}
    </select>

    <select id="get_Data_Months" parameterMap="par_map" statementType="CALLABLE">
        {Call get_All_Data_Months(?,?)}
    </select>

    <select id="get_Data_Real_Time" parameterType="java.lang.String" resultMap="test_map"  >
        SELECT *
        FROM Data_Real_Time
        WHERE code = #{code}
    </select>

</mapper>

        <!--<resultMap id="BaseResultMap" type="com.neo.entity.UserEntity" >-->
        <!--<id column="id" property="id" jdbcType="BIGINT" />-->
        <!--<result column="userName" property="userName" jdbcType="VARCHAR" />-->
        <!--<result column="passWord" property="passWord" jdbcType="VARCHAR" />-->
        <!--<result column="user_sex" property="userSex" javaType="com.neo.enums.UserSexEnum"/>-->
        <!--<result column="nick_name" property="nickName" jdbcType="VARCHAR" />-->
        <!--</resultMap>-->

        <!--<sql id="Base_Column_List" >-->
        <!--id, userName, passWord, user_sex, nick_name-->
        <!--</sql>-->

        <!--<select id="getAll" resultMap="BaseResultMap"  >-->
        <!--SELECT-->
        <!--<include refid="Base_Column_List" />-->
        <!--FROM users-->
        <!--</select>-->

        <!--<select id="getOne" parameterType="java.lang.Long" resultMap="BaseResultMap" >-->
        <!--SELECT-->
        <!--<include refid="Base_Column_List" />-->
        <!--FROM users-->
        <!--WHERE id = #{id}-->
        <!--</select>-->

        <!--<insert id="insert" parameterType="com.neo.entity.UserEntity" >-->
        <!--INSERT INTO-->
        <!--users-->
        <!--(userName,passWord,user_sex)-->
        <!--VALUES-->
        <!--(#{userName}, #{passWord}, #{userSex})-->
        <!--</insert>-->

        <!--<update id="update" parameterType="com.neo.entity.UserEntity" >-->
        <!--UPDATE-->
        <!--users-->
        <!--SET-->
        <!--<if test="userName != null">userName = #{userName},</if>-->
        <!--<if test="passWord != null">passWord = #{passWord},</if>-->
        <!--nick_name = #{nickName}-->
        <!--WHERE-->
        <!--id = #{id}-->
        <!--</update>-->

        <!--<delete id="delete" parameterType="java.lang.Long" >-->
        <!--DELETE FROM-->
        <!--users-->
        <!--WHERE-->
        <!--id =#{id}-->
        <!--</delete>-->